// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------
@use "sass:color";

@use "./variables" as v;

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: v.$base-url) {
  @return asset($base, "images/", $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: v.$base-url) {
  @return asset($base, "./fonts/", $path);
}

@function text-scale($size) {
  @return map-get(map-get(v.$text-settings, $size), "font-size");
}

@function line-height($size) {
  @return map-get(map-get(v.$text-settings, $size), "line-height");
}

@function theme-color($key: "primary", $variant: "base", $alpha: 0) {
  $map: map-get(v.$theme-colors, $key);
  @return color.adjust(map-get($map, $variant), $alpha: $alpha);
}
